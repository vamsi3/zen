"use strict";(self.webpackChunkzen=self.webpackChunkzen||[]).push([[8367],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var m=r.createContext({}),s=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(m.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,m=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),d=i,b=u["".concat(m,".").concat(d)]||u[d]||l[d]||o;return n?r.createElement(b,a(a({ref:t},p),{},{components:n})):r.createElement(b,a({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var c={};for(var m in t)hasOwnProperty.call(t,m)&&(c[m]=t[m]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4311:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return m},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],c={title:"Combination Sum"},m=void 0,s={unversionedId:"cp/problems/interview/combination-sum",id:"cp/problems/interview/combination-sum",title:"Combination Sum",description:"https://leetcode.com/problems/combination-sum/",source:"@site/docs/cp/problems/interview/combination-sum.mdx",sourceDirName:"cp/problems/interview",slug:"/cp/problems/interview/combination-sum",permalink:"/zen/cp/problems/interview/combination-sum",editUrl:"https://github.com/vamsi3/zen/edit/master/docs/cp/problems/interview/combination-sum.mdx",tags:[],version:"current",lastUpdatedAt:1636858709,formattedLastUpdatedAt:"11/14/2021",frontMatter:{title:"Combination Sum"},sidebar:"cp",previous:{title:"Behavior Interview",permalink:"/zen/cp/problems/interview/behavior"},next:{title:"Largest Rectangle in Histogram",permalink:"/zen/cp/problems/interview/largest-rectangle-in-histogram"}},p=[],l={toc:p};function u(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"PROBLEM")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/combination-sum/"},"https://leetcode.com/problems/combination-sum/")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="combinationSum" {7-8}',title:'"combinationSum"',"{7-8}":!0},"class Solution {\npublic:\n    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {\n        vector<vector<int>> validCombinations;\n        vector<int> currentCombination;\n        \n        function<void(vector<int>::iterator const, int)>\n        exploreCombinations = [&](vector<int>::iterator const it, int targetLeftOver) {\n            if (targetLeftOver == 0) {\n                validCombinations.push_back(currentCombination);\n                return;\n            }\n            if (targetLeftOver < 0 || it == candidates.end()) {\n                return;\n            }\n\n            auto const& currentCandidate = *it;\n            currentCombination.push_back(currentCandidate);\n            exploreCombinations(it, targetLeftOver - currentCandidate);\n            currentCombination.pop_back();\n            \n            exploreCombinations(next(it), targetLeftOver);\n        };\n\n        exploreCombinations(candidates.begin(), target);\n        return validCombinations;\n    }\n};\n")),(0,o.kt)("p",null,"Notice how recursive lambdas require explicit type declaration, and how local variables with lambdas mimic global variables with functions."))}u.isMDXComponent=!0}}]);