"use strict";(self.webpackChunkzen=self.webpackChunkzen||[]).push([[1626],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return p}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=u(n),p=a,f=m["".concat(c,".").concat(p)]||m[p]||s[p]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8215:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return m}});var r=n(7462),a=n(7294),o=n(2389),i=n(9443);var l=function(){var e=(0,a.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},c=n(3616),u=n(6010),d="tabItem_vU9c";function s(e){var t,n,r,o=e.lazy,i=e.block,s=e.defaultValue,m=e.values,p=e.groupId,f=e.className,v=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=m?m:v.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),b=(0,c.lx)(g,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var h=null===s?s:null!=(t=null!=s?s:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(r=v[0])?void 0:r.props.value;if(null!==h&&!g.some((function(e){return e.value===h})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=l(),k=y.tabGroupChoices,_=y.setTabGroupChoices,O=(0,a.useState)(h),x=O[0],E=O[1],T=[],w=(0,c.o5)().blockElementScrollPositionUntilNextRender;if(null!=p){var C=k[p];null!=C&&C!==x&&g.some((function(e){return e.value===C}))&&E(C)}var N=function(e){var t=e.currentTarget,n=T.indexOf(t),r=g[n].value;r!==x&&(w(t),E(r),null!=p&&_(p,r))},j=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=T.indexOf(e.currentTarget)+1;n=T[r]||T[0];break;case"ArrowLeft":var a=T.indexOf(e.currentTarget)-1;n=T[a]||T[T.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":i},f)},g.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,className:(0,u.Z)("tabs__item",d,{"tabs__item--active":x===t}),key:t,ref:function(e){return T.push(e)},onKeyDown:j,onFocus:N,onClick:N},null!=n?n:t)}))),o?(0,a.cloneElement)(v.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==x})}))))}function m(e){var t=(0,o.Z)();return a.createElement(s,(0,r.Z)({key:String(t)},e))}},4128:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return m},default:function(){return f}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=n(6396),l=n(8215),c=["components"],u={title:"Hamming Code",sidebar_label:"Hamming Code"},d=void 0,s={unversionedId:"cp/algorithms/hamming-code",id:"cp/algorithms/hamming-code",title:"Hamming Code",description:"",source:"@site/docs/cp/algorithms/hamming-code.mdx",sourceDirName:"cp/algorithms",slug:"/cp/algorithms/hamming-code",permalink:"/zen/cp/algorithms/hamming-code",editUrl:"https://github.com/vamsi3/zen/edit/master/docs/cp/algorithms/hamming-code.mdx",tags:[],version:"current",lastUpdatedAt:1636734525,formattedLastUpdatedAt:"11/12/2021",frontMatter:{title:"Hamming Code",sidebar_label:"Hamming Code"},sidebar:"cp",previous:{title:"Cycle Detection",permalink:"/zen/cp/algorithms/cycle-detection"},next:{title:"std::merge",permalink:"/zen/cp/algorithms/merge"}},m=[],p={toc:m};function f(e){var t=e.components,n=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"Code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="HammingCodeExtended"',title:'"HammingCodeExtended"'},"template<int32_t LOG_2_BLOCK_LENGTH>\nclass HammingCodeExtended {\npublic:\n    static std::vector<bool> encode(std::vector<bool> const& data) {\n        constexpr int32_t message_length = (1 << LOG_2_BLOCK_LENGTH) - LOG_2_BLOCK_LENGTH - 1;\n        constexpr int32_t block_length = (1 << LOG_2_BLOCK_LENGTH);\n        std::vector<bool> encoded_data;\n        for (int i = 0; i < data.size(); i += message_length) {\n            int n = encoded_data.size();\n            encoded_data.resize(n + block_length, 0);\n            int k = 2, p = 0;\n            for (int j = i; j < i + message_length; ++j) {\n                ++k; if (!(k & (k  - 1))) ++k;\n                encoded_data[n + k] = data[j];\n                if (encoded_data[n + k]) p ^= k, encoded_data[0] = !encoded_data[0];\n            }\n            for (k = 1; k < LOG_2_BLOCK_LENGTH; ++k) {\n                encoded_data[n + (1 << k)] = p & (1 << k);\n                if (encoded_data[n + (1 << k)]) encoded_data[0] = !encoded_data[0];\n            }\n        }\n        return encoded_data;\n    }\n\n    static std::vector<bool> decode(std::vector<bool> const& data) {\n        // TODO\n    }\n};\n"))),(0,o.kt)(l.Z,{value:"Verify",mdxType:"TabItem"},(0,o.kt)("div",{class:"verify-tab"},(0,o.kt)("div",{class:"verify"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Verification"',title:'"Verification"'},"int main() {\n    std::vector<bool> data;\n    for (int x; std::cin >> x; ) data.push_back(x);\n    auto encoded_data = HammingCodeExtended<4>::encode(data);\n    for (auto x : encoded_data) std::cout << x << ' ';\n}\n"))),(0,o.kt)("div",{class:"input"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Input"',title:'"Input"'},"1 0 1 0 0 1 0 1 0 0 1\n"))),(0,o.kt)("div",{class:"output"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Output"',title:'"Output"'},"1 0 0 1 1 0 1 0 1 0 1 0 1 0 0 1 \n")))))))}f.isMDXComponent=!0}}]);