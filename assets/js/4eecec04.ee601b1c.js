"use strict";(self.webpackChunkzen=self.webpackChunkzen||[]).push([[3166],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function a(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var c=r.createContext({}),u=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},p=function(t){var e=u(t.components);return r.createElement(c.Provider,{value:e},t.children)},l={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,c=t.parentName,p=a(t,["components","mdxType","originalType","parentName"]),f=u(n),d=o,m=f["".concat(c,".").concat(d)]||f[d]||l[d]||i;return n?r.createElement(m,s(s({ref:e},p),{},{components:n})):r.createElement(m,s({ref:e},p))}));function d(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,s=new Array(i);s[0]=f;var a={};for(var c in e)hasOwnProperty.call(e,c)&&(a[c]=e[c]);a.originalType=t,a.mdxType="string"==typeof t?t:o,s[1]=a;for(var u=2;u<i;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},690:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return f}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),s=["components"],a={title:"Custom definition of std::hash"},c=void 0,u={unversionedId:"cpp/custom-std-hash",id:"cpp/custom-std-hash",isDocsHomePage:!1,title:"Custom definition of std::hash",description:"",source:"@site/docs/cpp/custom-std-hash.mdx",sourceDirName:"cpp",slug:"/cpp/custom-std-hash",permalink:"/zen/cpp/custom-std-hash",editUrl:"https://github.com/vamsi3/zen/edit/master/docs/cpp/custom-std-hash.mdx",tags:[],version:"current",lastUpdatedAt:1636903024,formattedLastUpdatedAt:"11/14/2021",frontMatter:{title:"Custom definition of std::hash"},sidebar:"cpp",previous:{title:"C++",permalink:"/zen/cpp"},next:{title:"Attribute specifier sequence",permalink:"/zen/cpp/language/attribute-specifier-sequence"}},p=[],l={toc:p};function f(t){var e=t.components,n=(0,o.Z)(t,s);return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",2021:!0,className:"language-cpp",metastring:'title="Round H 2021 - Kick Start 2021 Silly Substitutions (Vamsi\'s submission)"',title:'"Round',H:!0,"-":!0,Kick:!0,Start:!0,Silly:!0,Substitutions:!0,"(Vamsi's":!0,'submission)"':!0},"template<> struct std::hash<std::list<int>::iterator> {\n    size_t operator()(list<int>::iterator const& it) const noexcept {\n        return hash<int*>()(&*it); // assuming that iterators contain data at different addresses\n    }\n};\n\nvoid solve() {\n    int n; string s; cin >> n >> s;\n    list<int> l; for (auto const& c : s) l.push_back(c - '0');\n    unordered_set<list<int>::iterator> p[10];\n    // ... ... ...\n")))}f.isMDXComponent=!0}}]);