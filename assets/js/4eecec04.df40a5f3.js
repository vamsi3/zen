"use strict";(self.webpackChunkzen=self.webpackChunkzen||[]).push([[3166],{7942:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(959);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(n),f=o,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||s;return n?r.createElement(m,a(a({ref:t},l),{},{components:n})):r.createElement(m,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:o,a[1]=i;for(var p=2;p<s;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1592:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var r=n(8957),o=(n(959),n(7942));const s={title:"Custom definition of std::hash"},a=void 0,i={unversionedId:"cpp/custom-std-hash",id:"cpp/custom-std-hash",title:"Custom definition of std::hash",description:"",source:"@site/docs/cpp/custom-std-hash.mdx",sourceDirName:"cpp",slug:"/cpp/custom-std-hash",permalink:"/zen/cpp/custom-std-hash",draft:!1,editUrl:"https://github.com/vamsi3/zen/edit/master/docs/cpp/custom-std-hash.mdx",tags:[],version:"current",lastUpdatedAt:1694358037,formattedLastUpdatedAt:"Sep 10, 2023",frontMatter:{title:"Custom definition of std::hash"},sidebar:"cpp",previous:{title:"User-defined Literals",permalink:"/zen/cpp/language/user-defined-literal"},next:{title:"lvalues & rvalues + Move Semantics & rvalue References",permalink:"/zen/cpp/lvalue-rvalue"}},c={},p=[],l={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",2021:!0,className:"language-cpp",metastring:'title="Round H 2021 - Kick Start 2021 Silly Substitutions (Vamsi\'s submission)"',title:'"Round',H:!0,"-":!0,Kick:!0,Start:!0,Silly:!0,Substitutions:!0,"(Vamsi's":!0,'submission)"':!0},"template<> struct std::hash<std::list<int>::iterator> {\n    size_t operator()(list<int>::iterator const& it) const noexcept {\n        return hash<int*>()(&*it); // assuming that iterators contain data at different addresses\n    }\n};\n\nvoid solve() {\n    int n; string s; cin >> n >> s;\n    list<int> l; for (auto const& c : s) l.push_back(c - '0');\n    unordered_set<list<int>::iterator> p[10];\n    // ... ... ...\n")))}d.isMDXComponent=!0}}]);