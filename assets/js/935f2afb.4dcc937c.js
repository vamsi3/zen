"use strict";(self.webpackChunkzen=self.webpackChunkzen||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"cp":[{"type":"link","label":"Home","href":"/zen/","docId":"cp/home"},{"type":"category","label":"Ad hoc","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Median Absolute Deviation","href":"/zen/cp/adhoc/median-absolute-deviation","docId":"cp/adhoc/median-absolute-deviation"}],"href":"/zen/category/ad-hoc"},{"type":"category","label":"Algorithms","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Binary Search","href":"/zen/cp/algorithms/binary-search","docId":"cp/algorithms/binary-search"},{"type":"link","label":"Coordinate Compression","href":"/zen/cp/algorithms/coordinate-compression","docId":"cp/algorithms/coordinate-compression"},{"type":"link","label":"Cycle Detection","href":"/zen/cp/algorithms/cycle-detection","docId":"cp/algorithms/cycle-detection"},{"type":"link","label":"Hamming Code","href":"/zen/cp/algorithms/hamming-code","docId":"cp/algorithms/hamming-code"},{"type":"link","label":"std::merge","href":"/zen/cp/algorithms/merge","docId":"cp/algorithms/merge"},{"type":"link","label":"Sorting","href":"/zen/cp/algorithms/sort","docId":"cp/algorithms/sort"},{"type":"link","label":"Subset Transforms (DP)","href":"/zen/cp/algorithms/subset-transforms","docId":"cp/algorithms/subset-transforms"}],"href":"/zen/category/algorithms"},{"type":"category","label":"Data Structures","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"DSU / Union-Find","href":"/zen/cp/data-structures/dsu","docId":"cp/data-structures/dsu"},{"type":"link","label":"Fenwick Tree / BIT","href":"/zen/cp/data-structures/fenwick-tree","docId":"cp/data-structures/fenwick-tree"},{"type":"category","label":"Heap","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Binary Heap","href":"/zen/cp/data-structures/heap/binary-heap","docId":"cp/data-structures/heap/binary-heap"},{"type":"link","label":"MinMax Heap","href":"/zen/cp/data-structures/heap/minmax-heap","docId":"cp/data-structures/heap/minmax-heap"},{"type":"link","label":"Pairing Heap","href":"/zen/cp/data-structures/heap/pairing-heap","docId":"cp/data-structures/heap/pairing-heap"}]},{"type":"link","label":"Singly Linked List","href":"/zen/cp/data-structures/linked-list","docId":"cp/data-structures/linked-list"},{"type":"link","label":"RegEx","href":"/zen/cp/data-structures/regex","docId":"cp/data-structures/regex"},{"type":"link","label":"Segment Tree","href":"/zen/cp/data-structures/segment-tree","docId":"cp/data-structures/segment-tree"},{"type":"link","label":"Tournament Tree","href":"/zen/cp/data-structures/tournament-tree","docId":"cp/data-structures/tournament-tree"},{"type":"link","label":"Treap","href":"/zen/cp/data-structures/treap","docId":"cp/data-structures/treap"},{"type":"link","label":"Tree","href":"/zen/cp/data-structures/tree","docId":"cp/data-structures/tree"},{"type":"link","label":"Vector","href":"/zen/cp/data-structures/vector","docId":"cp/data-structures/vector"}],"href":"/zen/category/data-structures"},{"type":"category","label":"Geometry","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Convex Hull","href":"/zen/cp/geometry/convex-hull","docId":"cp/geometry/convex-hull"},{"type":"link","label":"Point [Class]","href":"/zen/cp/geometry/point-class","docId":"cp/geometry/point-class"}],"href":"/zen/category/geometry"},{"type":"category","label":"Graph","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"2-SAT","href":"/zen/cp/graph/2-sat","docId":"cp/graph/2-sat"},{"type":"link","label":"Bridges + Articulation Points","href":"/zen/cp/graph/bridges-articulation-points","docId":"cp/graph/bridges-articulation-points"},{"type":"link","label":"Centroid Decomposition","href":"/zen/cp/graph/centroid-decomposition","docId":"cp/graph/centroid-decomposition"},{"type":"link","label":"Dijkstra\'s Algorithm","href":"/zen/cp/graph/dijkstra","docId":"cp/graph/dijkstra"},{"type":"link","label":"Dual Graphs of Planar Graphs","href":"/zen/cp/graph/dual-graphs","docId":"cp/graph/dual-graphs"},{"type":"link","label":"Edge Coloring","href":"/zen/cp/graph/edge-coloring","docId":"cp/graph/edge-coloring"},{"type":"link","label":"Euler Tour","href":"/zen/cp/graph/euler-tour","docId":"cp/graph/euler-tour"},{"type":"link","label":"Graph Class","href":"/zen/cp/graph/graph-class","docId":"cp/graph/graph-class"},{"type":"link","label":"Hungarian Algorithm","href":"/zen/cp/graph/hungarian","docId":"cp/graph/hungarian"},{"type":"link","label":"Implication Graph","href":"/zen/cp/graph/implication-graph","docId":"cp/graph/implication-graph"},{"type":"link","label":"Lowest Common Ancestor","href":"/zen/cp/graph/lca","docId":"cp/graph/lca"},{"type":"link","label":"Minimum Spanning Tree","href":"/zen/cp/graph/minimum-spanning-tree","docId":"cp/graph/minimum-spanning-tree"},{"type":"link","label":"Strongly Connected Components","href":"/zen/cp/graph/scc","docId":"cp/graph/scc"}],"href":"/zen/category/graph"},{"type":"category","label":"Mathematics","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Arithmetic","href":"/zen/cp/math/arithmetic","docId":"cp/math/arithmetic"},{"type":"link","label":"Chinese Remainder Theorem","href":"/zen/cp/math/chinese-remainder-theorem","docId":"cp/math/chinese-remainder-theorem"},{"type":"link","label":"Dirichlet Convolution","href":"/zen/cp/math/dirichlet-convolution","docId":"cp/math/dirichlet-convolution"},{"type":"link","label":"Fast Fourier Transform (FFT)","href":"/zen/cp/math/fft","docId":"cp/math/fft"},{"type":"link","label":"Fibonacci Numbers","href":"/zen/cp/math/fibonacci","docId":"cp/math/fibonacci"},{"type":"link","label":"Greatest Common Divisor (GCD)","href":"/zen/cp/math/gcd","docId":"cp/math/gcd"},{"type":"link","label":"M\xf6bius function","href":"/zen/cp/math/mobius","docId":"cp/math/mobius"},{"type":"link","label":"Integers in Modular Arithmetic","href":"/zen/cp/math/modint","docId":"cp/math/modint"},{"type":"link","label":"Montgomery Space","href":"/zen/cp/math/montgomery","docId":"cp/math/montgomery"},{"type":"link","label":"Number Theoretic Transform (NTT)","href":"/zen/cp/math/ntt","docId":"cp/math/ntt"},{"type":"link","label":"Number Theory","href":"/zen/cp/math/number-theory","docId":"cp/math/number-theory"},{"type":"link","label":"Polynomial Arithmetic","href":"/zen/cp/math/polynomial","docId":"cp/math/polynomial"},{"type":"link","label":"Primality Tests","href":"/zen/cp/math/primality-test","docId":"cp/math/primality-test"},{"type":"link","label":"Prime Factorization","href":"/zen/cp/math/prime-factorization","docId":"cp/math/prime-factorization"},{"type":"link","label":"Sieve","href":"/zen/cp/math/sieve","docId":"cp/math/sieve"}],"href":"/zen/category/mathematics"},{"type":"category","label":"Problems","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Combination Sum","href":"/zen/cp/problems/combination-sum","docId":"cp/problems/combination-sum"},{"type":"link","label":"Equal Partition","href":"/zen/cp/problems/equal-partition","docId":"cp/problems/equal-partition"},{"type":"link","label":"Knapsack Problem","href":"/zen/cp/problems/knapsack-problem","docId":"cp/problems/knapsack-problem"},{"type":"link","label":"Largest Rectangle in Histogram","href":"/zen/cp/problems/largest-rectangle-in-histogram","docId":"cp/problems/largest-rectangle-in-histogram"},{"type":"link","label":"Largest sum of contiguous subarray no larger than K","href":"/zen/cp/problems/largest-sum-of-contiguous-subarray-no-larger-than-k","docId":"cp/problems/largest-sum-of-contiguous-subarray-no-larger-than-k"},{"type":"link","label":"Merge K sorted lists","href":"/zen/cp/problems/merge-k-sorted-lists","docId":"cp/problems/merge-k-sorted-lists"},{"type":"link","label":"Number Of Divisors","href":"/zen/cp/problems/number-of-divisors","docId":"cp/problems/number-of-divisors"},{"type":"link","label":"Number of Topological Orderings of Tree","href":"/zen/cp/problems/number-of-topological-sortings-in-tree","docId":"cp/problems/number-of-topological-sortings-in-tree"}],"href":"/zen/category/problems"},{"type":"category","label":"String","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"KMP Algorithm","href":"/zen/cp/string/kmp","docId":"cp/string/kmp"},{"type":"link","label":"String Hashing","href":"/zen/cp/string/string-hashing","docId":"cp/string/string-hashing"},{"type":"link","label":"Suffix Array","href":"/zen/cp/string/suffix-array","docId":"cp/string/suffix-array"},{"type":"link","label":"Suffix Automaton","href":"/zen/cp/string/suffix-automaton","docId":"cp/string/suffix-automaton"},{"type":"link","label":"Z-function","href":"/zen/cp/string/z-function","docId":"cp/string/z-function"}],"href":"/zen/category/string"}],"cpp":[{"type":"link","label":"C++","href":"/zen/cpp","docId":"cpp/home"},{"type":"category","label":"Language","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Attribute specifier sequence","href":"/zen/cpp/language/attribute-specifier-sequence","docId":"cpp/language/attribute-specifier-sequence"},{"type":"link","label":"User-defined Literals","href":"/zen/cpp/language/user-defined-literal","docId":"cpp/language/user-defined-literal"}],"href":"/zen/category/language"},{"type":"link","label":"Custom definition of std::hash","href":"/zen/cpp/custom-std-hash","docId":"cpp/custom-std-hash"},{"type":"link","label":"lvalues & rvalues + Move Semantics & rvalue References","href":"/zen/cpp/lvalue-rvalue","docId":"cpp/lvalue-rvalue"},{"type":"link","label":"Notes","href":"/zen/cpp/notes","docId":"cpp/notes"},{"type":"link","label":"Object Oriented Programming","href":"/zen/cpp/oop","docId":"cpp/oop"}],"dip":[{"type":"link","label":"Home","href":"/zen/dip","docId":"dip/home"},{"type":"link","label":"Spatial Domain","href":"/zen/dip/spatial-domain","docId":"dip/spatial-domain"}],"dl":[{"type":"link","label":"Home","href":"/zen/dl","docId":"dl/home"},{"type":"link","label":"Binomial - Poisson distributions","href":"/zen/dl/binomial-poisson","docId":"dl/binomial-poisson"},{"type":"link","label":"Convolution","href":"/zen/dl/convolution","docId":"dl/convolution"},{"type":"link","label":"Pandas","href":"/zen/dl/pandas","docId":"dl/pandas"}],"cloud":[{"type":"link","label":"Home","href":"/zen/cloud","docId":"cloud/home"}]},"docs":{"cloud/home":{"id":"cloud/home","title":"Cloud","description":"Docker","sidebar":"cloud"},"cp/adhoc/median-absolute-deviation":{"id":"cp/adhoc/median-absolute-deviation","title":"Median Absolute Deviation (MAD)","description":"1. https://math.stackexchange.com/questions/113270/the-median-minimizes-the-sum-of-absolute-deviations-the-ell-1-norm","sidebar":"cp"},"cp/algorithms/binary-search":{"id":"cp/algorithms/binary-search","title":"Binary Search","description":"","sidebar":"cp"},"cp/algorithms/coordinate-compression":{"id":"cp/algorithms/coordinate-compression","title":"Coordinate Compression","description":"More Efficient Form","sidebar":"cp"},"cp/algorithms/cycle-detection":{"id":"cp/algorithms/cycle-detection","title":"Cycle Detection in Iterated Function Values","description":"Theory","sidebar":"cp"},"cp/algorithms/hamming-code":{"id":"cp/algorithms/hamming-code","title":"Hamming Code","description":"","sidebar":"cp"},"cp/algorithms/merge":{"id":"cp/algorithms/merge","title":"std::merge","description":"Code","sidebar":"cp"},"cp/algorithms/sort":{"id":"cp/algorithms/sort","title":"Sorting","description":"- Stable sort means that elements with equal value are not disturbed of their relative positions after sorting.","sidebar":"cp"},"cp/algorithms/subset-transforms":{"id":"cp/algorithms/subset-transforms","title":"Subset Transforms (Dynamic Programming)","description":"1. https://codeforces.com/blog/entry/45223","sidebar":"cp"},"cp/data-structures/dsu":{"id":"cp/data-structures/dsu","title":"Disjoint-set (DSU) / Union-Find","description":"Notes","sidebar":"cp"},"cp/data-structures/fenwick-tree":{"id":"cp/data-structures/fenwick-tree","title":"Fenwick Tree / BIT","description":"- Fenwick Tree","sidebar":"cp"},"cp/data-structures/heap/binary-heap":{"id":"cp/data-structures/heap/binary-heap","title":"Binary Heap","description":"What is the run-time algorithmic complexity of calling heapifyDown on every non-leaf node in a complete tree of n nodes?","sidebar":"cp"},"cp/data-structures/heap/minmax-heap":{"id":"cp/data-structures/heap/minmax-heap","title":"MinMax Heap","description":"- http://akira.ruc.dk/~keld/teaching/algoritmedesign_f03/Artikler/02/Atkinson86.pdf","sidebar":"cp"},"cp/data-structures/heap/pairing-heap":{"id":"cp/data-structures/heap/pairing-heap","title":"Pairing Heap","description":"- https://brilliant.org/wiki/pairing-heap/","sidebar":"cp"},"cp/data-structures/linked-list":{"id":"cp/data-structures/linked-list","title":"Forward List / Singly Linked List","description":"- Sentinel node at head initially.","sidebar":"cp"},"cp/data-structures/regex":{"id":"cp/data-structures/regex","title":"RegEx","description":"Thompson\'s NFA","sidebar":"cp"},"cp/data-structures/segment-tree":{"id":"cp/data-structures/segment-tree","title":"Segment Tree","description":"Theory","sidebar":"cp"},"cp/data-structures/tournament-tree":{"id":"cp/data-structures/tournament-tree","title":"Tournament Tree","description":"","sidebar":"cp"},"cp/data-structures/treap":{"id":"cp/data-structures/treap","title":"Treap","description":"Treap with Implicit Key","sidebar":"cp"},"cp/data-structures/tree":{"id":"cp/data-structures/tree","title":"Tree","description":"Whenever we say a Tree ADT, we usually refer to the \\"rooted, directed, acyclic\\" one. [Ref: Wikipedia]","sidebar":"cp"},"cp/data-structures/vector":{"id":"cp/data-structures/vector","title":"Vector","description":"","sidebar":"cp"},"cp/geometry/convex-hull":{"id":"cp/geometry/convex-hull","title":"Convex Hull","description":"Andrew\'s Monotone Chain Algorithm","sidebar":"cp"},"cp/geometry/point-class":{"id":"cp/geometry/point-class","title":"Point Class","description":"","sidebar":"cp"},"cp/graph/2-sat":{"id":"cp/graph/2-sat","title":"2-SAT","description":"- Graph::ImplicationGraph \u279d /cp/graph/implication-graph","sidebar":"cp"},"cp/graph/bridges-articulation-points":{"id":"cp/graph/bridges-articulation-points","title":"Bridges + Articulation Points","description":"Theory","sidebar":"cp"},"cp/graph/centroid-decomposition":{"id":"cp/graph/centroid-decomposition","title":"Centroid Decomposition","description":"Code","sidebar":"cp"},"cp/graph/dijkstra":{"id":"cp/graph/dijkstra","title":"Dijkstra\'s Algorithm","description":"- Graph::WeightedEdge \u279d /cp/graph/graph-class","sidebar":"cp"},"cp/graph/dual-graphs":{"id":"cp/graph/dual-graphs","title":"Dual Graphs of Planar Graphs","description":"https://en.wikipedia.org/wiki/Dualgraph","sidebar":"cp"},"cp/graph/edge-coloring":{"id":"cp/graph/edge-coloring","title":"Edge Coloring of Graph","description":"1. https://codeforces.com/blog/entry/75431","sidebar":"cp"},"cp/graph/euler-tour":{"id":"cp/graph/euler-tour","title":"Euler Path & Euler Circuit","description":"1. https://en.wikipedia.org/wiki/Eulerianpath","sidebar":"cp"},"cp/graph/graph-class":{"id":"cp/graph/graph-class","title":"Graph Class","description":"","sidebar":"cp"},"cp/graph/hungarian":{"id":"cp/graph/hungarian","title":"Hungarian Algorithm","description":"1. https://www.youtube.com/watch?v=cVBzMXYc4ss","sidebar":"cp"},"cp/graph/implication-graph":{"id":"cp/graph/implication-graph","title":"Implication Graph","description":"- Graph::SCC \u279d /cp/graph/scc","sidebar":"cp"},"cp/graph/lca":{"id":"cp/graph/lca","title":"Lowest Common Ancestor","description":"Binary lifting (better way)","sidebar":"cp"},"cp/graph/minimum-spanning-tree":{"id":"cp/graph/minimum-spanning-tree","title":"Minimum Spanning Tree (MST)","description":"- Graph::WeightedEdge \u279d /cp/graph/graph-class","sidebar":"cp"},"cp/graph/scc":{"id":"cp/graph/scc","title":"Strongly Connected Components","description":"Note","sidebar":"cp"},"cp/home":{"id":"cp/home","title":"Competitive Programming","description":"This contains all the template code and resources for CP.","sidebar":"cp"},"cp/math/arithmetic":{"id":"cp/math/arithmetic","title":"Arithmetic","description":"Operators","sidebar":"cp"},"cp/math/chinese-remainder-theorem":{"id":"cp/math/chinese-remainder-theorem","title":"Chinese Remainder Theorem","description":"Theorem","sidebar":"cp"},"cp/math/dirichlet-convolution":{"id":"cp/math/dirichlet-convolution","title":"Dirichlet Convolution","description":"If $f , g","sidebar":"cp"},"cp/math/fft":{"id":"cp/math/fft","title":"Fast Fourier Transform (FFT)","description":"","sidebar":"cp"},"cp/math/fibonacci":{"id":"cp/math/fibonacci","title":"Fibonacci Numbers","description":"From the generating function, we have","sidebar":"cp"},"cp/math/gcd":{"id":"cp/math/gcd","title":"Greatest Common Divisor (GCD)","description":"Euclid\'s Algorithm","sidebar":"cp"},"cp/math/mobius":{"id":"cp/math/mobius","title":"M\xf6bius function","description":"https://codeforces.com/blog/entry/53925","sidebar":"cp"},"cp/math/modint":{"id":"cp/math/modint","title":"Modular Integer Class","description":"- Iterative modular inverse//codeforces.com/blog/entry/64345?#comment-482502","sidebar":"cp"},"cp/math/montgomery":{"id":"cp/math/montgomery","title":"Montgomery Space","description":"","sidebar":"cp"},"cp/math/ntt":{"id":"cp/math/ntt","title":"Number Theoretic Transform (NTT)","description":"- ModularArithmetic::ModInt \u279d /cp/math/modint","sidebar":"cp"},"cp/math/number-theory":{"id":"cp/math/number-theory","title":"Number Theory","description":"Euclid\'s lemma \u2014 If a prime p divides the product ab of two integers a and b, then p must divide at least one of those integers a and b.","sidebar":"cp"},"cp/math/polynomial":{"id":"cp/math/polynomial","title":"Polynomial Arithmetic","description":"- NTT::conv1D \u279d /cp/math/ntt","sidebar":"cp"},"cp/math/primality-test":{"id":"cp/math/primality-test","title":"Primality Tests","description":"Naive","sidebar":"cp"},"cp/math/prime-factorization":{"id":"cp/math/prime-factorization","title":"Prime Factorization","description":"Naive Algorithm","sidebar":"cp"},"cp/math/sieve":{"id":"cp/math/sieve","title":"Prime Sieve","description":"Sieve of Eratosthenes","sidebar":"cp"},"cp/problems/combination-sum":{"id":"cp/problems/combination-sum","title":"Combination Sum","description":"https://leetcode.com/problems/combination-sum/","sidebar":"cp"},"cp/problems/equal-partition":{"id":"cp/problems/equal-partition","title":"Equal Partition","description":"Given a set of positive numbers, find if we can partition it into two subsets such that the sum of elements in both subsets is equal.","sidebar":"cp"},"cp/problems/knapsack-problem":{"id":"cp/problems/knapsack-problem","title":"Knapsack Problem","description":"","sidebar":"cp"},"cp/problems/largest-rectangle-in-histogram":{"id":"cp/problems/largest-rectangle-in-histogram","title":"Largest Rectangle in Histogram","description":"","sidebar":"cp"},"cp/problems/largest-sum-of-contiguous-subarray-no-larger-than-k":{"id":"cp/problems/largest-sum-of-contiguous-subarray-no-larger-than-k","title":"Largest sum of contiguous subarray no larger than K","description":"","sidebar":"cp"},"cp/problems/merge-k-sorted-lists":{"id":"cp/problems/merge-k-sorted-lists","title":"Merge K sorted lists","description":"Given an array of \u2018K\u2019 sorted LinkedLists, merge them into one sorted list.","sidebar":"cp"},"cp/problems/number-of-divisors":{"id":"cp/problems/number-of-divisors","title":"Number Of Divisors","description":"Question 1","sidebar":"cp"},"cp/problems/number-of-topological-sortings-in-tree":{"id":"cp/problems/number-of-topological-sortings-in-tree","title":"Number of Topological Orderings of a Directed Tree considering each node as root","description":"Question 1","sidebar":"cp"},"cp/string/kmp":{"id":"cp/string/kmp","title":"Knuth\u2013Morris\u2013Pratt algorithm","description":"Theory","sidebar":"cp"},"cp/string/string-hashing":{"id":"cp/string/string-hashing","title":"String Hashing","description":"Code","sidebar":"cp"},"cp/string/suffix-array":{"id":"cp/string/suffix-array","title":"Suffix Array","description":"","sidebar":"cp"},"cp/string/suffix-automaton":{"id":"cp/string/suffix-automaton","title":"Suffix Automaton","description":"1. https://cp-algorithms.com/string/suffix-automaton.html","sidebar":"cp"},"cp/string/z-function":{"id":"cp/string/z-function","title":"Z-function & Z-algorithm","description":"","sidebar":"cp"},"cpp/custom-std-hash":{"id":"cpp/custom-std-hash","title":"Custom definition of std::hash","description":"","sidebar":"cpp"},"cpp/home":{"id":"cpp/home","title":"C++ (until C++20)","description":"Some Features","sidebar":"cpp"},"cpp/language/attribute-specifier-sequence":{"id":"cpp/language/attribute-specifier-sequence","title":"Attribute specifier sequence","description":"[[maybe_unused]]","sidebar":"cpp"},"cpp/language/user-defined-literal":{"id":"cpp/language/user-defined-literal","title":"User-defined Literals","description":"Note that a literal should start with an underscore _. We declare a new literal by this pattern:","sidebar":"cpp"},"cpp/lvalue-rvalue":{"id":"cpp/lvalue-rvalue","title":"lvalues & rvalues + Move Semantics & rvalue References","description":"- https://www.internalpointers.com/post/understanding-meaning-lvalues-and-rvalues-c","sidebar":"cpp"},"cpp/notes":{"id":"cpp/notes","title":"Notes","description":"std::numeric_limits","sidebar":"cpp"},"cpp/oop":{"id":"cpp/oop","title":"Object Oriented Programming","description":"A derived class must specify the class(es) from which it intends to inherit. It does so in a class derivation list, which is a colon followed by a comma-separated list of base classes each of which may have an optional access specifier.","sidebar":"cpp"},"dip/home":{"id":"dip/home","title":"Digital Image Processing","description":"This section is about Image Processing techniques on digital images.","sidebar":"dip"},"dip/spatial-domain":{"id":"dip/spatial-domain","title":"Spatial Domain","description":"Point-Processing Techniques","sidebar":"dip"},"dl/binomial-poisson":{"id":"dl/binomial-poisson","title":"Relation between Binomial and Poisson distributions","description":"Content here is mainly sourced (copied?) from here","sidebar":"dl"},"dl/convolution":{"id":"dl/convolution","title":"Convolution in 2D","description":"Code (using only numpy)","sidebar":"dl"},"dl/home":{"id":"dl/home","title":"Deep Learning","description":"This section is about anything related to AI / Machine Learning / Deep Learning and even associated topics like Statistics, Probability Theory etc.","sidebar":"dl"},"dl/pandas":{"id":"dl/pandas","title":"Pandas","description":"pd.Series","sidebar":"dl"},"intro":{"id":"intro","title":"Tutorial Intro","description":"Let\'s discover Docusaurus in less than 5 minutes."},"sw/home":{"id":"sw/home","title":"SW","description":"SW"}}}')}}]);