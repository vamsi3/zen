"use strict";(self.webpackChunkzen=self.webpackChunkzen||[]).push([[5400],{9613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7471:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(9496),a=n(5924);const i="tabItem_FTZG";function l(e){let{children:t,hidden:n,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(i,l),hidden:n},t)}},9890:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(2081),a=n(9496),i=n(5924),l=n(506),o=n(741),s=n(3802),u=n(2075);const c="tabList_m6Et",p="tabItem_b767";function m(e){var t,n;const{lazy:l,block:m,defaultValue:d,values:f,groupId:g,className:b}=e,v=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=f?f:v.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),y=(0,o.l)(h,((e,t)=>e.value===t.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===d?d:null!=(t=null!=d?d:null==(n=v.find((e=>e.props.default)))?void 0:n.props.value)?t:v[0].props.value;if(null!==k&&!h.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:x,setTabGroupChoices:O}=(0,s.U)(),[T,w]=(0,a.useState)(k),j=[],{blockElementScrollPositionUntilNextRender:E}=(0,u.o5)();if(null!=g){const e=x[g];null!=e&&e!==T&&h.some((t=>t.value===e))&&w(e)}const N=e=>{const t=e.currentTarget,n=j.indexOf(t),r=h[n].value;r!==T&&(E(t),w(r),null!=g&&O(g,String(r)))},_=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var r;const t=j.indexOf(e.currentTarget)+1;n=null!=(r=j[t])?r:j[0];break}case"ArrowLeft":{var a;const t=j.indexOf(e.currentTarget)-1;n=null!=(a=j[t])?a:j[j.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,i.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":m},b)},h.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>j.push(e),onKeyDown:_,onFocus:N,onClick:N},l,{className:(0,i.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),l?(0,a.cloneElement)(v.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function d(e){const t=(0,l.Z)();return a.createElement(m,(0,r.Z)({key:String(t)},e))}},4059:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var r=n(2081),a=(n(9496),n(9613)),i=n(9890),l=n(7471);const o={title:"Knuth\u2013Morris\u2013Pratt algorithm",sidebar_label:"KMP Algorithm"},s=void 0,u={unversionedId:"cp/string/kmp",id:"cp/string/kmp",title:"Knuth\u2013Morris\u2013Pratt algorithm",description:"Theory",source:"@site/docs/cp/string/kmp.mdx",sourceDirName:"cp/string",slug:"/cp/string/kmp",permalink:"/zen/cp/string/kmp",draft:!1,editUrl:"https://github.com/vamsi3/zen/edit/master/docs/cp/string/kmp.mdx",tags:[],version:"current",lastUpdatedAt:1658655454,formattedLastUpdatedAt:"Jul 24, 2022",frontMatter:{title:"Knuth\u2013Morris\u2013Pratt algorithm",sidebar_label:"KMP Algorithm"},sidebar:"cp",previous:{title:"String",permalink:"/zen/category/string"},next:{title:"String Hashing",permalink:"/zen/cp/string/string-hashing"}},c={},p=[{value:"Theory",id:"theory",level:2}],m={toc:p};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(i.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"Code",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Algorithm::prefix_function | String::prefix_function"',title:'"Algorithm::prefix_function',"|":!0,'String::prefix_function"':!0},"namespace Algorithm {\n    template<typename T>\n    std::vector<int32_t> prefix_function(std::span<T> const& s) {\n        int32_t n = static_cast<int32_t>(s.size());\n        std::vector<int32_t> p(n); p[0] = 0;\n        for (int i = 1; i < n; ++i) {\n            int32_t j = p[i - 1];\n            while (j > 0 && s[j] != s[i]) j = p[j - 1];\n            p[i] = (s[i] == s[j]) ? j + 1 : j;\n        }\n        return p;\n    }\n}\n\nnamespace String {\n    std::vector<int> prefix_function(std::string const& s) {\n        return Algorithm::prefix_function<char const>({s.begin(), s.length()});\n    }\n}\n"))),(0,a.kt)(l.Z,{value:"Verify",mdxType:"TabItem"},(0,a.kt)("div",{class:"verify-tab"},(0,a.kt)("div",{class:"verify"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Verification"',title:'"Verification"'},"int main() {\n    std::string s; std::cin >> s;\n    auto pi = String::prefix_function(s);\n    for (auto const& x : pi) std::cout << x << ' ';\n}\n"))),(0,a.kt)("div",{class:"input"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Input"',title:'"Input"'},"aabaaab\n"))),(0,a.kt)("div",{class:"output"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Output"',title:'"Output"'},"0 1 0 1 2 2 3 \n")))))),(0,a.kt)("h2",{id:"theory"},"Theory"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In the context of KMP algorithm, the function ",(0,a.kt)("inlineCode",{parentName:"li"},"String::prefix_function")," is also called ",(0,a.kt)("u",null,(0,a.kt)("strong",{parentName:"li"},"failure function")),".")))}d.isMDXComponent=!0}}]);