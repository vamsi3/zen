"use strict";(self.webpackChunkzen=self.webpackChunkzen||[]).push([[7971],{9613:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var r=t(9496);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(t),f=o,h=m["".concat(c,".").concat(f)]||m[f]||u[f]||a;return t?r.createElement(h,i(i({ref:n},s),{},{components:t})):r.createElement(h,i({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6640:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=t(4250),o=(t(9496),t(9613));const a={title:"Convex Hull",sidebar_label:"Convex Hull"},i=void 0,l={unversionedId:"cp/geometry/convex-hull",id:"cp/geometry/convex-hull",title:"Convex Hull",description:"Andrew's Monotone Chain Algorithm",source:"@site/docs/cp/geometry/convex-hull.mdx",sourceDirName:"cp/geometry",slug:"/cp/geometry/convex-hull",permalink:"/zen/cp/geometry/convex-hull",draft:!1,editUrl:"https://github.com/vamsi3/zen/edit/master/docs/cp/geometry/convex-hull.mdx",tags:[],version:"current",lastUpdatedAt:1667746530,formattedLastUpdatedAt:"Nov 6, 2022",frontMatter:{title:"Convex Hull",sidebar_label:"Convex Hull"},sidebar:"cp",previous:{title:"Geometry",permalink:"/zen/category/geometry"},next:{title:"Point [Class]",permalink:"/zen/cp/geometry/point-class"}},c={},p=[{value:"Andrew&#39;s Monotone Chain Algorithm",id:"andrews-monotone-chain-algorithm",level:2},{value:"Convex Hull with Uncertainty of presence and location of points",id:"convex-hull-with-uncertainty-of-presence-and-location-of-points",level:2}],s={toc:p};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"andrews-monotone-chain-algorithm"},"Andrew's Monotone Chain Algorithm"),(0,o.kt)("p",null,"Probably a bit faster than Graham's Scan."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Test Link: ",(0,o.kt)("a",{parentName:"p",href:"https://open.kattis.com/problems/convexhull"},"https://open.kattis.com/problems/convexhull"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"namespace ConvexHull {\n  using P = Point::Point<int64_t>;\n\n  vector<P> AndrewMonotoneChain(vector<P> &p) {\n    sort(p.begin(), p.end(), [&](const auto& a, const auto& b) {\n      return a.x != b.x ? a.x < b.x : a.y < b.y;\n    });\n    p.resize(unique(p.begin(), p.end()) - p.begin());\n    int n = p.size();\n    if (n <= 2) return p;\n    vector<P> h(n + 1); int k = 0;\n    for (int i = 0; i < n; ++i) { // Lower Hull\n      while (k >= 2 && h[k - 2].cross(h[k - 1], p[i]) <= 0) --k;\n      h[k++] = p[i];\n    }\n    for (int i = n - 2, t = k + 1; i >= 0; --i) { // Upper Hull\n      while (k >= t && h[k - 2].cross(h[k - 1], p[i]) <= 0) --k;\n      h[k++] = p[i];\n    }\n    h.resize(k - 1);\n    return h;\n  }\n}\n")),(0,o.kt)("h2",{id:"convex-hull-with-uncertainty-of-presence-and-location-of-points"},"Convex Hull with Uncertainty of presence and location of points"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://arxiv.org/abs/1406.6599"},"https://arxiv.org/abs/1406.6599")))}u.isMDXComponent=!0}}]);