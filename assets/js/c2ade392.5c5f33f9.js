"use strict";(self.webpackChunkzen=self.webpackChunkzen||[]).push([[2901],{9613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),f=c(n),d=a,m=f["".concat(l,".").concat(d)]||f[d]||p[d]||s;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=f;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1978:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(9496),a=n(5924);const s="tabItem_IPoj";function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(s,i),hidden:n},t)}},2356:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(4250),a=n(9496),s=n(5924),i=n(9298),o=n(1461),l=n(3903),c=n(4539);const u="tabList_xr86",p="tabItem_r4_W";function f(e){var t;const{lazy:n,block:i,defaultValue:f,values:d,groupId:m,className:b}=e,g=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=d??g.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),y=(0,o.l)(v,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const x=null===f?f:f??(null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)??g[0].props.value;if(null!==x&&!v.some((e=>e.value===x)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${x}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:_}=(0,l.U)(),[k,w]=(0,a.useState)(x),O=[],{blockElementScrollPositionUntilNextRender:T}=(0,c.o5)();if(null!=m){const e=h[m];null!=e&&e!==k&&v.some((t=>t.value===e))&&w(e)}const E=e=>{const t=e.currentTarget,n=O.indexOf(t),r=v[n].value;r!==k&&(T(t),w(r),null!=m&&_(m,String(r)))},N=e=>{var t;let n=null;switch(e.key){case"Enter":E(e);break;case"ArrowRight":{const t=O.indexOf(e.currentTarget)+1;n=O[t]??O[0];break}case"ArrowLeft":{const t=O.indexOf(e.currentTarget)-1;n=O[t]??O[O.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,s.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":i},b)},v.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,key:t,ref:e=>O.push(e),onKeyDown:N,onClick:E},i,{className:(0,s.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":k===t})}),n??t)}))),n?(0,a.cloneElement)(g.filter((e=>e.props.value===k))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==k})))))}function d(e){const t=(0,i.Z)();return a.createElement(f,(0,r.Z)({key:String(t)},e))}},7037:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=n(4250),a=(n(9496),n(9613)),s=n(2356),i=n(1978);const o={title:"Suffix Array",sidebar_label:"Suffix Array"},l=void 0,c={unversionedId:"cp/string/suffix-array",id:"cp/string/suffix-array",title:"Suffix Array",description:"",source:"@site/docs/cp/string/suffix-array.mdx",sourceDirName:"cp/string",slug:"/cp/string/suffix-array",permalink:"/zen/cp/string/suffix-array",draft:!1,editUrl:"https://github.com/vamsi3/zen/edit/master/docs/cp/string/suffix-array.mdx",tags:[],version:"current",lastUpdatedAt:1667746530,formattedLastUpdatedAt:"Nov 6, 2022",frontMatter:{title:"Suffix Array",sidebar_label:"Suffix Array"},sidebar:"cp",previous:{title:"String Hashing",permalink:"/zen/cp/string/string-hashing"},next:{title:"Suffix Automaton",permalink:"/zen/cp/string/suffix-automaton"}},u={},p=[],f={toc:p};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"Code",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Algorithm :: sort_cyclic_shifts | String :: suffix_array"',title:'"Algorithm',"::":!0,sort_cyclic_shifts:!0,"|":!0,String:!0,'suffix_array"':!0},"namespace Algorithm {\n    template<typename T>\n    std::vector<int32_t> sort_cyclic_shifts(std::span<T> const& s) {\n        int32_t n = static_cast<int32_t>(s.size());\n        int32_t class_idx = std::ranges::max(s);\n        std::vector<int32_t> p(n), q(n), c(s.begin(), s.end()), cnt(std::max(class_idx + 1, n));\n        std::iota(p.begin(), p.end(), 0);\n\n        auto counting_sort = [&]() {\n            std::fill_n(cnt.begin(), class_idx + 1, 0);\n            for (auto i : std::views::iota(0, n))                           ++cnt[c[p[i]]];\n            for (auto i : std::views::iota(1, class_idx + 1))               cnt[i] += cnt[i - 1];\n            for (auto i : std::views::iota(0, n) | std::views::reverse)     q[--cnt[c[p[i]]]] = p[i];\n            p.swap(q);\n        };\n        \n        auto assign_classes = [&](int32_t const& k) {\n            q[p[0]] = class_idx = 0;\n            for (int i = 1; i < n; ++i) {\n                std::tuple<int, int> cur  = {c[p[i    ]], c[(p[i    ] + k) % n]};\n                std::tuple<int, int> prev = {c[p[i - 1]], c[(p[i - 1] + k) % n]};\n                if (cur != prev) ++class_idx;\n                q[p[i]] = class_idx;\n            }\n            c.swap(q);\n        };\n\n        counting_sort();\n        assign_classes(0);\n        for (int32_t k = 1; k < n; k <<= 1) {\n            for (auto& x : p) { x -= k; if (x < 0) x += n; }\n            counting_sort();\n            assign_classes(k);\n        }\n        return p;\n    }\n}\n\nnamespace String {\n    std::vector<int> suffix_array(std::string& s) {\n        s.push_back('$');\n        auto suffix_array = Algorithm::sort_cyclic_shifts<char const>({s.begin(), s.length()});\n        s.pop_back();\n        suffix_array.erase(suffix_array.begin());\n        return suffix_array;\n    }\n}\n"))),(0,a.kt)(i.Z,{value:"Verify",mdxType:"TabItem"},(0,a.kt)("div",{class:"verify-tab"},(0,a.kt)("div",{class:"verify"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Verification"',title:'"Verification"'},"int main() {\n    std::string s; std::cin >> s;\n    auto suffix_array_of_s = String::suffix_array(s);\n    for (auto const& x : suffix_array_of_s) std::cout << x << ' ';\n}\n"))),(0,a.kt)("div",{class:"input"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Input"',title:'"Input"'},"abaab\n"))),(0,a.kt)("div",{class:"output"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Output"',title:'"Output"'},"2 3 0 4 1 \n")))))))}d.isMDXComponent=!0}}]);