"use strict";(self.webpackChunkzen=self.webpackChunkzen||[]).push([[7838],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(n),f=o,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2370:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return d}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),i=["components"],c={title:"Cloud",slug:"/cloud",sidebar_label:"Home",sidebar_position:1},l=void 0,s={unversionedId:"cloud/home",id:"cloud/home",title:"Cloud",description:"Docker",source:"@site/docs/cloud/home.mdx",sourceDirName:"cloud",slug:"/cloud",permalink:"/zen/cloud",editUrl:"https://github.com/vamsi3/zen/edit/master/docs/cloud/home.mdx",tags:[],version:"current",lastUpdatedAt:1657897032,formattedLastUpdatedAt:"7/15/2022",sidebarPosition:1,frontMatter:{title:"Cloud",slug:"/cloud",sidebar_label:"Home",sidebar_position:1}},u={},d=[{value:"Docker",id:"docker",level:2},{value:"Basics",id:"basics",level:3},{value:"Dockerfile - Creating Images",id:"dockerfile---creating-images",level:3}],p={toc:d};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"docker"},"Docker"),(0,a.kt)("h3",{id:"basics"},"Basics"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Shell"',title:'"Shell"'},"docker create [IMAGE] # Creates a container with image\n\ndocker start [CONTAINER ID]\ndocker start -a [IMAGE] # for our purpose for now, -a to show output on console\n\ndocker run [IMAGE] # Creates a container with image, and starts it\n\ndocker ps --all # List containers\n\ndocker system prune\n\ndocker logs [CONTAINER ID]\n\ndocker stop [CONTAINER ID] # Sends SIGTERM to process in container. If container doesn't stop in 10 seconds, docker sends a KILL signal.\ndocker kill [CONTAINER ID] # Sends SIGKILL to process in container\n\ndocker exec -it [CONTAINER ID] [COMMAND] # Execute an additional command in a container\ndocker exec -it [CONTAINER ID] sh # Specific example very useful in real life, opens up a shell\n\ndocker run -it [CONTAINER ID] sh\n")),(0,a.kt)("h3",{id:"dockerfile---creating-images"},"Dockerfile - Creating Images"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-docker",metastring:'title="Dockerfile"',title:'"Dockerfile"'},'FROM alpine\nRUN apk add --update redis\nCMD ["redis-server"]\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Shell"',title:'"Shell"'},"docker build . # from directory containing dockerfile\n")))}f.isMDXComponent=!0}}]);