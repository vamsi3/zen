"use strict";(self.webpackChunkzen=self.webpackChunkzen||[]).push([[3166],{9613:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>f});var r=n(9496);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function s(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?s(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},s=Object.keys(t);for(r=0;r<s.length;r++)n=s[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(r=0;r<s.length;r++)n=s[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var c=r.createContext({}),l=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},p=function(t){var e=l(t.components);return r.createElement(c.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,s=t.originalType,c=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),d=l(n),f=o,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||s;return n?r.createElement(m,a(a({ref:e},p),{},{components:n})):r.createElement(m,a({ref:e},p))}));function f(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var s=n.length,a=new Array(s);a[0]=d;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=t,i.mdxType="string"==typeof t?t:o,a[1]=i;for(var l=2;l<s;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1531:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=n(2081),o=(n(9496),n(9613));const s={title:"Custom definition of std::hash"},a=void 0,i={unversionedId:"cpp/custom-std-hash",id:"cpp/custom-std-hash",title:"Custom definition of std::hash",description:"",source:"@site/docs/cpp/custom-std-hash.mdx",sourceDirName:"cpp",slug:"/cpp/custom-std-hash",permalink:"/zen/cpp/custom-std-hash",draft:!1,editUrl:"https://github.com/vamsi3/zen/edit/master/docs/cpp/custom-std-hash.mdx",tags:[],version:"current",lastUpdatedAt:1658661893,formattedLastUpdatedAt:"Jul 24, 2022",frontMatter:{title:"Custom definition of std::hash"},sidebar:"cpp",previous:{title:"User-defined Literals",permalink:"/zen/cpp/language/user-defined-literal"},next:{title:"lvalues & rvalues + Move Semantics & rvalue References",permalink:"/zen/cpp/lvalue-rvalue"}},c={},l=[],p={toc:l};function u(t){let{components:e,...n}=t;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",2021:!0,className:"language-cpp",metastring:'title="Round H 2021 - Kick Start 2021 Silly Substitutions (Vamsi\'s submission)"',title:'"Round',H:!0,"-":!0,Kick:!0,Start:!0,Silly:!0,Substitutions:!0,"(Vamsi's":!0,'submission)"':!0},"template<> struct std::hash<std::list<int>::iterator> {\n    size_t operator()(list<int>::iterator const& it) const noexcept {\n        return hash<int*>()(&*it); // assuming that iterators contain data at different addresses\n    }\n};\n\nvoid solve() {\n    int n; string s; cin >> n >> s;\n    list<int> l; for (auto const& c : s) l.push_back(c - '0');\n    unordered_set<list<int>::iterator> p[10];\n    // ... ... ...\n")))}u.isMDXComponent=!0}}]);