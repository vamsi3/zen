"use strict";(self.webpackChunkzen=self.webpackChunkzen||[]).push([[166],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=s(n),f=a,d=m["".concat(u,".").concat(f)]||m[f]||p[f]||i;return n?r.createElement(d,l(l({ref:t},c),{},{components:n})):r.createElement(d,l({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8215:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return m}});var r=n(7462),a=n(7294),i=n(2389),l=n(9443);var o=function(){var e=(0,a.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=n(3616),s=n(6010),c="tabItem_vU9c";function p(e){var t,n,r,i=e.lazy,l=e.block,p=e.defaultValue,m=e.values,f=e.groupId,d=e.className,v=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=m?m:v.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),b=(0,u.lx)(g,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===p?p:null!=(t=null!=p?p:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(r=v[0])?void 0:r.props.value;if(null!==y&&!g.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var h=o(),w=h.tabGroupChoices,k=h.setTabGroupChoices,x=(0,a.useState)(y),O=x[0],T=x[1],_=[],E=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var j=w[f];null!=j&&j!==O&&g.some((function(e){return e.value===j}))&&T(j)}var N=function(e){var t=e.currentTarget,n=_.indexOf(t),r=g[n].value;r!==O&&(E(t),T(r),null!=f&&k(f,r))},P=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=_.indexOf(e.currentTarget)+1;n=_[r]||_[0];break;case"ArrowLeft":var a=_.indexOf(e.currentTarget)-1;n=_[a]||_[_.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":l},d)},g.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,className:(0,s.Z)("tabs__item",c,{"tabs__item--active":O===t}),key:t,ref:function(e){return _.push(e)},onKeyDown:P,onFocus:N,onClick:N},null!=n?n:t)}))),i?(0,a.cloneElement)(v.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}function m(e){var t=(0,i.Z)();return a.createElement(p,(0,r.Z)({key:String(t)},e))}},8734:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return m},default:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=n(6396),o=n(8215),u=["components"],s={title:"Largest Rectangle in Histogram"},c=void 0,p={unversionedId:"cp/problems/interview/largest-rectangle-in-histogram",id:"cp/problems/interview/largest-rectangle-in-histogram",title:"Largest Rectangle in Histogram",description:"",source:"@site/docs/cp/problems/interview/largest-rectangle-in-histogram.mdx",sourceDirName:"cp/problems/interview",slug:"/cp/problems/interview/largest-rectangle-in-histogram",permalink:"/zen/cp/problems/interview/largest-rectangle-in-histogram",editUrl:"https://github.com/vamsi3/zen/edit/master/docs/cp/problems/interview/largest-rectangle-in-histogram.mdx",tags:[],version:"current",lastUpdatedAt:1636858709,formattedLastUpdatedAt:"11/14/2021",frontMatter:{title:"Largest Rectangle in Histogram"},sidebar:"cp",previous:{title:"Combination Sum",permalink:"/zen/cp/problems/interview/combination-sum"},next:{title:"Largest sum of contiguous subarray no larger than K",permalink:"/zen/cp/problems/interview/largest-sum-of-contiguous-subarray-no-larger-than-k"}},m=[],f={toc:m};function d(e){var t=e.components,n=(0,a.Z)(e,u);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(l.Z,{mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"Code",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Problem :: largestRectangleArea" {16}',title:'"Problem',"::":!0,'largestRectangleArea"':!0,"{16}":!0},"namespace Problem {\n    /* Returns sub array as [i, j]. If not found, returns {-1, -1} */\n    template<typename T>\n    uint64_t largestRectangleArea(std::span<T> a) {\n        int32_t n = static_cast<int32_t>(a.size());\n        std::stack<int32_t> s;\n        uint64_t max_area = 0;\n        for (int32_t i = 0; i <= n; ++i) {\n            int a_i = (i == n) ? 0 : a[i];\n            while (!s.empty()) {\n                auto const& j = s.top();\n                if (a[j] <= a_i) break;\n                s.pop();\n                /* a values in X are all >= a[j] where X is [0, i) if s is empty else (s.top(), i)  */\n                /* essentialy X defined above is {leftClosestSmaller, rightClosestSmaller} for index j */\n                max_area = std::max(max_area, a[j] * static_cast<uint64_t>(s.empty() ? i : i - s.top() - 1));\n            }\n            s.push(i);\n        }\n        return max_area;\n    }\n}\n"))),(0,i.kt)(o.Z,{value:"Verify",mdxType:"TabItem"},(0,i.kt)("div",{class:"verify-tab"},(0,i.kt)("div",{class:"verify"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Verification"',title:'"Verification"'},"int main() {\n    int32_t n;\n    std::cin >> n;\n    std::vector<int32_t> a(n);\n    for (int32_t i : std::views::iota(0, n)) {\n        std::cin >> a[i]; /* a[i] >= 1 */\n    }\n    auto max_area = Problem::largestRectangleArea<int32_t>(a);\n    std::cout << max_area << std::endl;\n}\n"))),(0,i.kt)("div",{class:"input"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Input"',title:'"Input"'},"6\n2 1 5 6 2 3\n"))),(0,i.kt)("div",{class:"output"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Output"',title:'"Output"'},"10\n")))))))}d.isMDXComponent=!0}}]);