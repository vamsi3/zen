"use strict";(self.webpackChunkzen=self.webpackChunkzen||[]).push([[2901],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=l(n),d=a,m=p["".concat(u,".").concat(d)]||p[d]||f[d]||i;return n?r.createElement(m,s(s({ref:t},c),{},{components:n})):r.createElement(m,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=p;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var l=2;l<i;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8215:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return p}});var r=n(7462),a=n(7294),i=n(2389),s=n(9443);var o=function(){var e=(0,a.useContext)(s.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=n(3616),l=n(6010),c="tabItem_vU9c";function f(e){var t,n,r,i=e.lazy,s=e.block,f=e.defaultValue,p=e.values,d=e.groupId,m=e.className,v=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=p?p:v.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),y=(0,u.lx)(g,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===f?f:null!=(t=null!=f?f:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(r=v[0])?void 0:r.props.value;if(null!==b&&!g.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var x=o(),h=x.tabGroupChoices,_=x.setTabGroupChoices,k=(0,a.useState)(b),w=k[0],O=k[1],T=[],E=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var N=h[d];null!=N&&N!==w&&g.some((function(e){return e.value===N}))&&O(N)}var j=function(e){var t=e.currentTarget,n=T.indexOf(t),r=g[n].value;r!==w&&(E(t),O(r),null!=d&&_(d,r))},S=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=T.indexOf(e.currentTarget)+1;n=T[r]||T[0];break;case"ArrowLeft":var a=T.indexOf(e.currentTarget)-1;n=T[a]||T[T.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":s},m)},g.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,className:(0,l.Z)("tabs__item",c,{"tabs__item--active":w===t}),key:t,ref:function(e){return T.push(e)},onKeyDown:S,onFocus:j,onClick:j},null!=n?n:t)}))),i?(0,a.cloneElement)(v.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function p(e){var t=(0,i.Z)();return a.createElement(f,(0,r.Z)({key:String(t)},e))}},875:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return f},toc:function(){return p},default:function(){return m}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),s=n(6396),o=n(8215),u=["components"],l={title:"Suffix Array",sidebar_label:"Suffix Array"},c=void 0,f={unversionedId:"cp/string/suffix-array",id:"cp/string/suffix-array",title:"Suffix Array",description:"",source:"@site/docs/cp/string/suffix-array.mdx",sourceDirName:"cp/string",slug:"/cp/string/suffix-array",permalink:"/zen/cp/string/suffix-array",editUrl:"https://github.com/vamsi3/zen/edit/master/docs/cp/string/suffix-array.mdx",tags:[],version:"current",lastUpdatedAt:1641309238,formattedLastUpdatedAt:"1/4/2022",frontMatter:{title:"Suffix Array",sidebar_label:"Suffix Array"},sidebar:"cp",previous:{title:"String Hashing",permalink:"/zen/cp/string/string-hashing"},next:{title:"Suffix Automaton",permalink:"/zen/cp/string/suffix-automaton"}},p=[],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,u);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(s.Z,{mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"Code",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Algorithm :: sort_cyclic_shifts | String :: suffix_array"',title:'"Algorithm',"::":!0,sort_cyclic_shifts:!0,"|":!0,String:!0,'suffix_array"':!0},"namespace Algorithm {\n    template<typename T>\n    std::vector<int32_t> sort_cyclic_shifts(std::span<T> const& s) {\n        int32_t n = static_cast<int32_t>(s.size());\n        int32_t class_idx = std::ranges::max(s);\n        std::vector<int32_t> p(n), q(n), c(s.begin(), s.end()), cnt(std::max(class_idx + 1, n));\n        std::iota(p.begin(), p.end(), 0);\n\n        auto counting_sort = [&]() {\n            std::fill_n(cnt.begin(), class_idx + 1, 0);\n            for (auto i : std::views::iota(0, n))                           ++cnt[c[p[i]]];\n            for (auto i : std::views::iota(1, class_idx + 1))               cnt[i] += cnt[i - 1];\n            for (auto i : std::views::iota(0, n) | std::views::reverse)     q[--cnt[c[p[i]]]] = p[i];\n            p.swap(q);\n        };\n        \n        auto assign_classes = [&](int32_t const& k) {\n            q[p[0]] = class_idx = 0;\n            for (int i = 1; i < n; ++i) {\n                std::tuple<int, int> cur  = {c[p[i    ]], c[(p[i    ] + k) % n]};\n                std::tuple<int, int> prev = {c[p[i - 1]], c[(p[i - 1] + k) % n]};\n                if (cur != prev) ++class_idx;\n                q[p[i]] = class_idx;\n            }\n            c.swap(q);\n        };\n\n        counting_sort();\n        assign_classes(0);\n        for (int32_t k = 1; k < n; k <<= 1) {\n            for (auto& x : p) { x -= k; if (x < 0) x += n; }\n            counting_sort();\n            assign_classes(k);\n        }\n        return p;\n    }\n}\n\nnamespace String {\n    std::vector<int> suffix_array(std::string& s) {\n        s.push_back('$');\n        auto suffix_array = Algorithm::sort_cyclic_shifts<char const>({s.begin(), s.length()});\n        s.pop_back();\n        suffix_array.erase(suffix_array.begin());\n        return suffix_array;\n    }\n}\n"))),(0,i.kt)(o.Z,{value:"Verify",mdxType:"TabItem"},(0,i.kt)("div",{class:"verify-tab"},(0,i.kt)("div",{class:"verify"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Verification"',title:'"Verification"'},"int main() {\n    std::string s; std::cin >> s;\n    auto suffix_array_of_s = String::suffix_array(s);\n    for (auto const& x : suffix_array_of_s) std::cout << x << ' ';\n}\n"))),(0,i.kt)("div",{class:"input"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Input"',title:'"Input"'},"abaab\n"))),(0,i.kt)("div",{class:"output"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Output"',title:'"Output"'},"2 3 0 4 1 \n")))))))}m.isMDXComponent=!0}}]);