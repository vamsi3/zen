"use strict";(self.webpackChunkzen=self.webpackChunkzen||[]).push([[2193],{9613:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>y});var n=t(9496);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=p(t),y=a,f=m["".concat(l,".").concat(y)]||m[y]||u[y]||o;return t?n.createElement(f,i(i({ref:r},s),{},{components:t})):n.createElement(f,i({ref:r},s))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7272:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var n=t(2081),a=(t(9496),t(9613));const o={title:"Binary Search",sidebar_label:"Binary Search"},i=void 0,c={unversionedId:"cp/algorithms/binary-search",id:"cp/algorithms/binary-search",title:"Binary Search",description:"",source:"@site/docs/cp/algorithms/binary-search.mdx",sourceDirName:"cp/algorithms",slug:"/cp/algorithms/binary-search",permalink:"/zen/cp/algorithms/binary-search",draft:!1,editUrl:"https://github.com/vamsi3/zen/edit/master/docs/cp/algorithms/binary-search.mdx",tags:[],version:"current",lastUpdatedAt:1658661893,formattedLastUpdatedAt:"Jul 24, 2022",frontMatter:{title:"Binary Search",sidebar_label:"Binary Search"},sidebar:"cp",previous:{title:"Algorithms",permalink:"/zen/category/algorithms"},next:{title:"Coordinate Compression",permalink:"/zen/cp/algorithms/coordinate-compression"}},l={},p=[],s={toc:p};function u(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"namespace Algorithm {\n    tuple<int, int> binary_search(vector<int> v) {\n        int l = -1, r = v.size();\n        while (r - l > 1) {\n            auto m = l + (r - l) / 2;\n            (v[m] ? r : l) = m;\n        }\n        return {l, r};\n    }\n}\n\nint main() {\n  vector<int> v = {0, 0, 0, 1, 1, 1, 1};\n  auto [l, r] = Algorithm::binary_search(v); // l = 2, r = 3\n}\n")))}u.isMDXComponent=!0}}]);