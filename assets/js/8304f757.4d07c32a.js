"use strict";(self.webpackChunkzen=self.webpackChunkzen||[]).push([[7971],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=p(t),m=o,h=f["".concat(c,".").concat(m)]||f[m]||s[m]||i;return t?r.createElement(h,a(a({ref:n},u),{},{components:t})):r.createElement(h,a({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},6425:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return s}});var r=t(3117),o=t(102),i=(t(7294),t(3905)),a=["components"],l={title:"Convex Hull",sidebar_label:"Convex Hull"},c=void 0,p={unversionedId:"cp/geometry/convex-hull",id:"cp/geometry/convex-hull",title:"Convex Hull",description:"Andrew's Monotone Chain Algorithm",source:"@site/docs/cp/geometry/convex-hull.mdx",sourceDirName:"cp/geometry",slug:"/cp/geometry/convex-hull",permalink:"/zen/cp/geometry/convex-hull",editUrl:"https://github.com/vamsi3/zen/edit/master/docs/cp/geometry/convex-hull.mdx",tags:[],version:"current",lastUpdatedAt:1648309952,formattedLastUpdatedAt:"3/26/2022",frontMatter:{title:"Convex Hull",sidebar_label:"Convex Hull"},sidebar:"cp",previous:{title:"Vector",permalink:"/zen/cp/data-structures/vector"},next:{title:"Point [Class]",permalink:"/zen/cp/geometry/point-class"}},u={},s=[{value:"Andrew&#39;s Monotone Chain Algorithm",id:"andrews-monotone-chain-algorithm",level:2},{value:"Convex Hull with Uncertainty of presence and location of points",id:"convex-hull-with-uncertainty-of-presence-and-location-of-points",level:2}],f={toc:s};function m(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"andrews-monotone-chain-algorithm"},"Andrew's Monotone Chain Algorithm"),(0,i.kt)("p",null,"Probably a bit faster than Graham's Scan."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Test Link: ",(0,i.kt)("a",{parentName:"p",href:"https://open.kattis.com/problems/convexhull"},"https://open.kattis.com/problems/convexhull"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"namespace ConvexHull {\n  using P = Point::Point<int64_t>;\n\n  vector<P> AndrewMonotoneChain(vector<P> &p) {\n    sort(p.begin(), p.end(), [&](const auto& a, const auto& b) {\n      return a.x != b.x ? a.x < b.x : a.y < b.y;\n    });\n    p.resize(unique(p.begin(), p.end()) - p.begin());\n    int n = p.size();\n    if (n <= 2) return p;\n    vector<P> h(n + 1); int k = 0;\n    for (int i = 0; i < n; ++i) { // Lower Hull\n      while (k >= 2 && h[k - 2].cross(h[k - 1], p[i]) <= 0) --k;\n      h[k++] = p[i];\n    }\n    for (int i = n - 2, t = k + 1; i >= 0; --i) { // Upper Hull\n      while (k >= t && h[k - 2].cross(h[k - 1], p[i]) <= 0) --k;\n      h[k++] = p[i];\n    }\n    h.resize(k - 1);\n    return h;\n  }\n}\n")),(0,i.kt)("h2",{id:"convex-hull-with-uncertainty-of-presence-and-location-of-points"},"Convex Hull with Uncertainty of presence and location of points"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://arxiv.org/abs/1406.6599"},"https://arxiv.org/abs/1406.6599")))}m.isMDXComponent=!0}}]);